[workspace]
resolver = "2"
members = ["cli", "guests/membership", "guests/balance_and_exits", "crates/ssz-multiproofs", "crates/gindices", "crates/guest-io", "crates/tracing-risc0", "crates/test-utils"]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "Apache-2.0"

[workspace.dependencies]
gindices.path = "./crates/gindices"
ssz-multiproofs.path = "./crates/ssz-multiproofs"
guest-io.path = "./crates/guest-io"
membership_builder.path = "./guests/membership"
balance_and_exits_builder.path = "./guests/balance_and_exits"
test-utils.path = "./crates/test-utils"

alloy = { version = "0.12", features = ["full"] }
alloy-primitives = { version = "0.8", default-features = false, features = ["rlp", "serde", "std"] }
alloy-sol-types = { version = "0.8" }
anyhow = { version = "1.0.75" }
bincode = { version = "1.3" }
bytemuck = { version = "1.14" }
hex = { version = "0.4" }
log = { version = "0.4" }
methods = { path = "./methods" }
risc0-build = { version = "2.0", features = ["docker"] }
risc0-build-ethereum = { git = "https://github.com/risc0/risc0-ethereum", tag = "v2.0.2" }
risc0-ethereum-contracts = { git = "https://github.com/risc0/risc0-ethereum", tag = "v2.0.2" }
risc0-steel = { git = "https://github.com/risc0/risc0-ethereum", tag = "v2.0.2" }
risc0-zkvm = { version = "2.0" }
risc0-zkp = { version = "2.0" }
risc0-zkvm-platform = { version = "2.0", default-features = false }
revm = { version = "19.2", default-features = false, features = ["std"] }

ethereum-consensus = { git = "https://github.com/ralexstokes/ethereum-consensus.git", rev = "8fbd8a53dca0170bedeca40a92ee70fd48c4615b", default-features = false, features = ["serde"] }
ssz_rs = { git = "https://github.com/willemolding/ssz-rs", rev = "41c4ecd24ab9ca85ec6cae11d4227410f9363f37"}

serde = { version = "1.0", features = ["derive", "std"] }
url = { version = "2.5" }
bitvec = { version = "1", features = ["serde"] }
sha2 = "0.10.8"
tracing = "0.1.41"

tokio = { version = "1.35", features = ["full"] }

[profile.release]
opt-level = 3 # Optimize for build time and code size; use "3" for maximum runtime performance
codegen-units = 16 # Increases parallelism in code generation
debug = false # Disable debug information to speed up builds
lto = false # Link Time Optimization disabled for faster linking
panic = "unwind" # Keeps unwinding for better build speed; "abort" is faster but changes behavior
incremental = false # Disable incremental compilation for deterministic builds
overflow-checks = false # Skip overflow checks for better performance

[patch."https://github.com/ralexstokes/ssz-rs"]
# Get the merkle tree empty node virtualization so non-trivial merkle trees actually fit in memory
ssz_rs = { git = "https://github.com/willemolding/ssz-rs", rev = "41c4ecd24ab9ca85ec6cae11d4227410f9363f37"}
